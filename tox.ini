[tox]
isolated_build = True
envlist = bandit, safety, check-copyright, black-check, isort-check, vulture, flake8, mypy, pylint, py3{8,9,10}, docs

[tox:.package]
# note tox will use the same python version as under what tox is installed to package
# so unless this is python 3 you can require a given python version for the packaging
# environment via the basepython key
basepython = python3

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
deps =
    pytest>=7.1.2,<7.2.0
    pytest-cov>=3.0.0,<3.1.0
    pytest-randomly>=3.12.0,<3.13.0
    hypothesis[numpy]>=6.70.0,<6.71.0
    ; Other test dependencies
    ; ...
    mistletoe>=0.8.2,<0.9.0

commands =
    pytest --basetemp={envtmpdir} --doctest-modules \
        black_it tests/ \
        --cov=black_it \
        --ignore=example/models \
        --cov-report=xml \
        --cov-report=html \
        --cov-report=term {posargs}

[testenv:py{38,39,310}]
commands =
    {[testenv]commands}

# test environment for notebooks
[testenv:py{38,39,310}-nb]
deps =
    pytest>=7.1.2,<7.2.0
    mesa>=0.9.0,<0.10.0
    nbmake>=1.3.0,<1.4.0
commands = pytest examples/tests_on_toy_model.ipynb --nbmake --nbmake-timeout=300

[testenv:flake8]
skip_install = True
deps =
    flake8>=5.0.0,<6.0.0
    flake8-bugbear>=23.3.12,<23.4.0
    flake8-docstrings>=1.7.0,<1.8.0
    flake8-eradicate>=1.4.0,<1.5.0
    flake8-isort>=6.0.0,<6.1.0
    pydocstyle>=6.3.0,<6.4.0
commands =
    flake8 black_it tests scripts examples

[testenv:mypy]
skip_install = True
deps =
    mypy~=1.1.1
    numpy>=1.23.3,<1.24.0
    hypothesis[numpy]>=6.70.0,<6.71.0
commands =
    mypy black_it tests scripts examples

[testenv:pylint]
skipdist = True
deps =
    pylint>=2.17.0,<2.18.0
    pytest>=7.1.2,<7.2.0
    hypothesis[numpy]>=6.70.0,<6.71.0
    mesa>=0.9.0,<0.10.0
    mistletoe>=0.8.2,<0.9.0
commands = pylint black_it tests scripts examples

[testenv:black]
skip_install = True
deps = black~=23.1.0
commands = black black_it tests scripts examples

[testenv:black-check]
skip_install = True
deps = black~=23.1.0
commands = black black_it tests scripts examples --check --verbose

[testenv:isort]
skip_install = True
deps = isort>=5.10.1,<5.11.0
commands = isort black_it tests scripts examples

[testenv:isort-check]
skip_install = True
deps = isort>=5.10.1,<5.11.0
commands = isort --check-only black_it tests scripts examples

[testenv:bandit]
skipsdist = True
skip_install = True
deps = bandit>=1.7.4,<1.8.0
commands = bandit --configfile .bandit.yaml --recursive black_it tests scripts examples

[testenv:safety]
skipsdist = False
skip_install = False
deps = safety~=2.3.4
commands = safety check

[testenv:vulture]
skipsdist = True
skip_install = True
deps = vulture>=2.3,<3.0
commands =
    vulture black_it scripts/whitelists/package_whitelist.py
    vulture examples scripts/whitelists/examples_whitelist.py
    vulture tests scripts/whitelists/tests_whitelist.py

[testenv:darglint]
skipsdist = True
skip_install = True
deps =
    darglint>=1.8.1,<1.9.0
commands = darglint black_it

[testenv:docs]
deps =
    markdown-include==0.6.0
    markdown==3.3.7
    mkdocs-autorefs==0.4.1
    mkdocs-material-extensions==1.0.3
    mkdocs-material==8.2.15
    mkdocs==1.3.0
    mkdocstrings-python-legacy==0.2.2
    mkdocstrings==0.18.1
    mknotebooks==0.7.1.post0.dev98
    pymdown-extensions==9.4
commands =
    mkdocs build --clean

[testenv:docs-serve]
deps =
    markdown-include==0.6.0
    markdown==3.3.7
    mkdocs-autorefs==0.4.1
    mkdocs-material-extensions==1.0.3
    mkdocs-material==8.2.15
    mkdocs==1.3.0
    mkdocstrings-python-legacy==0.2.2
    mkdocstrings==0.18.1
    mknotebooks==0.7.1.post0.dev98
    pymdown-extensions==9.4
commands =
    mkdocs build --clean
    python -c 'print("###### Starting local server. Press Control+C to stop server ######")'
    mkdocs serve

[testenv:check-copyright]
skip_install = True
deps =
commands = python3 scripts/check_copyright.py

[testenv:spell_check]
skip_install = True
deps =
allowlist_externals = {toxinidir}/scripts/spell-check.sh
commands = {toxinidir}/scripts/spell-check.sh --report
