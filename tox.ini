[tox]
isolated_build = True
envlist = bandit, safety, check-copyright, black-check, vulture, mypy, py3{8,9,10,11}, docs

[tox:.package]
# note tox will use the same python version as under what tox is installed to package
# so unless this is python 3 you can require a given python version for the packaging
# environment via the basepython key
basepython = python3

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
deps =
    pytest==7.4.2
    pytest-cov==4.1.0
    pytest-randomly==3.15.0
    hypothesis[numpy]==6.82.6
    ; Other test dependencies
    ; ...
    mistletoe==1.2.1

commands =
    pytest --basetemp={envtmpdir} --doctest-modules \
        black_it tests/ \
        --cov=black_it \
        --ignore=example/models \
        --cov-report=xml \
        --cov-report=html \
        --cov-report=term {posargs}

[testenv:py{38,39,310,311}]
commands =
    {[testenv]commands}

# test environment for notebooks
[testenv:py{38,39,310,311}-nb]
deps =
    pytest==7.4.2
    mesa==2.1.1
    nbmake==1.4.3
commands = pytest examples/tests_on_toy_model.ipynb --nbmake --nbmake-timeout=300

[testenv:mypy]
deps =
    hypothesis[numpy]==6.82.6
    importlib-metadata==6.8.0
    mistletoe==1.2.1
    mypy==1.5.1
    pytest==7.4.2
    types-backports==0.1.3
    types-setuptools==68.2.0.0
commands =
    mypy black_it tests scripts examples

[testenv:black]
skip_install = True
deps = black==23.9.1
commands = black .

[testenv:black-check]
skip_install = True
deps = black==23.9.1
commands = black --check --verbose .

[testenv:ruff]
skip_install = True
deps = ruff==0.0.290
commands = ruff check --fix --show-fixes .

[testenv:ruff-check]
skip_install = True
deps = ruff==0.0.290
commands = ruff check .

[testenv:bandit]
skipsdist = True
skip_install = True
deps = bandit==1.7.5
commands = bandit --configfile .bandit.yaml --recursive black_it tests scripts examples

[testenv:safety]
skipsdist = False
skip_install = False
deps = safety==2.4.0b1
commands = safety check

[testenv:vulture]
skipsdist = True
skip_install = True
deps = vulture==2.9.1
commands =
    vulture black_it scripts/whitelists/package_whitelist.py
    vulture examples scripts/whitelists/examples_whitelist.py
    vulture tests scripts/whitelists/tests_whitelist.py

[testenv:darglint]
skipsdist = True
skip_install = True
deps =
    darglint==1.8.1
commands = darglint black_it

[testenv:docs]
deps =
    markdown-include==0.8.1
    markdown==3.4.4
    mkdocs-autorefs==0.5.0
    mkdocs-material-extensions==1.2
    mkdocs-material==9.4.1
    mkdocs==1.5.3
    mkdocstrings-python-legacy==0.2.3
    mkdocstrings==0.22.0
    mknotebooks==0.8.0
    pymdown-extensions==10.3
commands =
    mkdocs build --clean

[testenv:docs-serve]
deps =
    markdown-include==0.8.1
    markdown==3.4.4
    mkdocs-autorefs==0.5.0
    mkdocs-material-extensions==1.2
    mkdocs-material==9.4.1
    mkdocs==1.5.3
    mkdocstrings-python-legacy==0.2.3
    mkdocstrings==0.22.0
    mknotebooks==0.8.0
    pymdown-extensions==10.3
commands =
    mkdocs build --clean
    python -c 'print("###### Starting local server. Press Control+C to stop server ######")'
    mkdocs serve

[testenv:check-copyright]
skip_install = True
deps =
commands = python3 scripts/check_copyright.py

[testenv:spell_check]
skip_install = True
deps =
allowlist_externals = {toxinidir}/scripts/spell-check.sh
commands = {toxinidir}/scripts/spell-check.sh --report
