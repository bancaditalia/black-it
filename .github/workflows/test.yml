name: test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  run:
    continue-on-error: True
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.9, "3.10"]

    timeout-minutes: 30

    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run:  pip install tox poetry
#    # set up environment depending on the platform in use
#    - if: matrix.os == 'ubuntu-latest'
#      name: Install dependencies (ubuntu-latest)
#      run: ...
#    - if: matrix.os == 'macos-latest'
#      name: Install dependencies (macos-latest)
#      run: ...
#    - if: matrix.os == 'windows-latest'
#      name: Install dependencies (windows-latest)
#      env:
#        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
#      run: ...
    - if: ${{ (matrix.os == 'ubuntu-latest') || (matrix.os == 'macos-latest') }}
      name: Unit tests and coverage (ubuntu-latest, macos-latest)
      run: |
        pyver=`echo ${{ matrix.python-version }} | tr -d "."`
        tox -e py${pyver} -- -m 'not e2e'
        tox -e py${pyver}-nb
    - if: matrix.os == 'windows-latest'
      name: Unit tests and coverage (windows-latest)
      run: |
        set pyver=${{ matrix.python-version }}:.=%
        tox -e py${pyver} -- -m 'not e2e'
        tox -e py${pyver}-nb
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: false
