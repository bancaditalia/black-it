name: lint

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  run:
    continue-on-error: True
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]

    timeout-minutes: 30

    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      # We deduce the Poetry version from the lockfile. Please note that we have
      # to prepend "python" because PowerShell is not able to execute directly a
      # python script with a shebang.
      # In fact, this workflow is never run on Windows, but let's prioritize
      # consistency with the test.yml workflow.
      run:  pip install poetry==$(python scripts/estimate_poetry_version.py)
    - name: Install tox
      # We deduce the tox version from the lockfile. Please note that we have
      # to prepend "python" because PowerShell is not able to execute directly a
      # python script with a shebang.
      # In fact, this workflow is never run on Windows, but let's prioritize
      # consistency with the test.yml workflow.
      run:  pip install tox==$(poetry export --only=dev --without-hashes | python scripts/estimate_tox_version.py)
    - name: Check Poetry lock file
      run: make poetry-lock-check
    - name: Code style check
      run: |
        tox -e black-check,ruff-check,vulture,darglint
    - name: Static type check
      run: tox -e mypy
    - name: Check copyright
      run: tox -e check-copyright
    - name: Misc checks
      run: |
        tox -e bandit
